apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: catalogue-pipeline
  namespace: tekton-pipelines
spec:
  workspaces:
  - name: shared-workspace

  params:
  - name: database-image
  - name: image

  tasks:
  - name: fetch-repository
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-workspace
    params:
    - name: url
      value: https://github.com/abdul125/level3-project
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"

  - name: build-catalogue-db
    taskRef:
      name: build-catalogue-db
    runAfter:
    - fetch-repository
    workspaces:
    - name: source
      workspace: shared-workspace
    params:
    - name: IMAGE
      value: $(params.database-image)
    - name: EXTRA_ARGS
      value: "--skip-tls-verify"

  - name: build-catalogue
    taskRef:
      name: build-catalogue
    runAfter:
    - fetch-repository # should it be after db?
    workspaces:
    - name: source
      workspace: shared-workspace
    params:
    - name: IMAGE
      value: $(params.image)
    - name: EXTRA_ARGS
      value: "--skip-tls-verify"
 
  - name: verify-digest-both
    runAfter:
    - build-catalogue
    params:
    - name: digest-db
      value: $(tasks.build-catalogue-db.results.IMAGE-DIGEST)
    - name: digest
      value: $(tasks.build-catalogue.results.IMAGE-DIGEST)
    taskSpec:
      params:
      - name: digest-db
      - name: digest
      steps:
      - name: bash
        image: ubuntu
        script: |
          echo "digest-db ... "
          echo $(params.digest-db)
          case .$(params.digest-db) in ".sha"*) exit 0 ;;
            *)       echo "Digest value is not correct" && exit 1 ;;
          esac &&\
          echo "digest ... "
          echo $(params.digest)
          case .$(params.digest) in ".sha"*) exit 0 ;;
            *)       echo "Digest value is not correct" && exit 1 ;;
          esac


  - name: deploy-to-test
    taskRef:
      name: deploy-catalogue
    runAfter:
    - verify-digest-both
    workspaces:
    - name: source
      workspace: shared-workspace
    params: 
    - name: namespace
      value: "test"

  ## unit-testing

  - name: deploy-to-production
    taskRef:
      name: deploy-catalogue
    runAfter:
      - deploy-to-test  # !important put unit-test; just 4 testing
    workspaces:
      - name: source
        workspace: shared-workspace
    params: 
    - name: namespace
      value: "prod"
  


---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: run-catalogue-pipeline
  namespace: tekton-pipelines
spec:
  serviceAccountName: tekton-sa
  pipelineRef:
    name: catalogue-pipeline
  params:
  - name: database-image
    value: abdul125/catalogue-db:test
  - name: image
    value: abdul125/catalogue:test
  workspaces:
  - name: shared-workspace
    persistentvolumeclaim:
      claimName: kaniko-source-pvc
